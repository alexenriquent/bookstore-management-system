@model BookStoreManagementSystem.Models.S4452232

@{
    ViewBag.Title = "DeleteBooks";
}

<h2>Delete Books</h2>

<h4>S4452232</h4>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Index)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Year)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th></th>
    </tr>

@foreach (var item in ViewBag.books) {
    <tr>
        <td>
            @item.Index
        </td>
        <td>
            @item.ID
        </td>
        <td>
            @item.Name
        </td>
        <td>
            @item.Author
        </td>
        <td>
            @item.Year
        </td>
        <td>
            @item.Price
        </td>
        <td>
            @item.Stock
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Attribute", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("attribute", new List<SelectListItem> {
                    new SelectListItem { Text = "Index", Value = "index" },
                    new SelectListItem { Text = "ID", Value = "id" },
                    new SelectListItem { Text = "Year", Value = "year" }}, new { @class = "form-control" })
            </div>
        </div>

        <div id="index" class="form-group">
            @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Index, new { htmlAttributes = new { @class = "form-control", id = "index-textbox" } })
                <div  id="index-message">@Html.ValidationMessageFor(model => model.Index, "", new { @class = "text-danger" })</div>
            </div>
        </div>

        <div hidden id="id" class="form-group">
            @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", id = "id-textbox" } })
                <div  id="id-message">@Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })</div>
            </div>
        </div>

        <div hidden id="year" class="form-group">
            @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", id = "year-textbox" } })
                <div  id="year-message">@Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })</div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Delete" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        $.fn.clearErrors = function () {
            $(this).each(function () {
                $(this).find(".field-validation-error").empty();
            });
        };

        $(function () {
            $("#index-textbox").val("");
            $("#attribute").change(function () {
                $("#index-message, #id-message, #year-message").clearErrors();
                $("#index-textbox, #id-textbox, #year-textbox").val("");
                var selectedValue = $(this).val();
                if (selectedValue == "index") {
                    $("#index, #index-message").show();
                    $("#id, #id-message, #year, #year-message").hide();
                } else if (selectedValue == "id") {
                    $("#id, #id-message").show();
                    $("#index, #index-message, #year, #year-message").hide();
                } else if (selectedValue == "year") {
                    $("#year, #year-message").show();
                    $("#index, #index-message, #id, #id-message").hide();
                }
            });
        });
</script>
}